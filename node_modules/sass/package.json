{
  "_args": [
    [
      {
        "raw": "sass",
        "scope": null,
        "escapedName": "sass",
        "name": "sass",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/amanda/portfolio"
    ]
  ],
  "_from": "sass@latest",
  "_id": "sass@1.0.0-beta.2",
  "_inCache": true,
  "_location": "/sass",
  "_nodeVersion": "7.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sass-1.0.0-beta.2.tgz_1500083861344_0.10499136056751013"
  },
  "_npmUser": {
    "name": "nex3",
    "email": "nex342@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sass",
    "scope": null,
    "escapedName": "sass",
    "name": "sass",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sass/-/sass-1.0.0-beta.2.tgz",
  "_shasum": "910071f16ddcde0b946392aadfa12d347128eb5d",
  "_shrinkwrap": null,
  "_spec": "sass",
  "_where": "/Users/amanda/portfolio",
  "author": {
    "name": "Natalie Weizenbaum",
    "email": "nweiz@google.com",
    "url": "https://github.com/nex3"
  },
  "bin": {
    "sass": "sass.js"
  },
  "bugs": {
    "url": "https://github.com/sass/dart-sass/issues"
  },
  "dependencies": {},
  "description": "A Dart implementation of Sass, compiled to JS.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "910071f16ddcde0b946392aadfa12d347128eb5d",
    "tarball": "https://registry.npmjs.org/sass/-/sass-1.0.0-beta.2.tgz"
  },
  "engines": {
    "node": ">=0.11.8"
  },
  "homepage": "https://github.com/sass/dart-sass",
  "keywords": [
    "style",
    "scss",
    "sass",
    "preprocessor",
    "css"
  ],
  "license": "MIT",
  "main": "sass.dart.js",
  "maintainers": [
    {
      "name": "nex3",
      "email": "nex342@gmail.com"
    },
    {
      "name": "hcatlin",
      "email": "hcatlin@gmail.com"
    },
    {
      "name": "chriseppstein",
      "email": "chris@eppsteins.net"
    },
    {
      "name": "xzyfer",
      "email": "xzyfer@gmail.com"
    }
  ],
  "name": "sass",
  "optionalDependencies": {},
  "readme": "A [Dart][dart] implementation of [Sass][sass]. **Sass makes CSS fun again**.\n\n[![Travis build status](https://api.travis-ci.org/sass/dart-sass.svg)](https://travis-ci.org/sass/dart-sass) [![Appveyor build status](https://ci.appveyor.com/api/projects/status/84rl9hvu8uoecgef?svg=true)](https://ci.appveyor.com/project/nex3/dart-sass)\n\n[dart]: https://www.dartlang.org\n[sass]: http://sass-lang.com/\n\n* [Using Dart Sass](#using-dart-sass)\n  * [From Chocolatey (Windows)](#from-chocolatey-windows)\n  * [Standalone](#standalone)\n  * [From npm](#from-npm)\n  * [From Pub](#from-pub)\n  * [From Source](#from-source)\n* [Goals](#goals)\n* [Behavioral Differences](#behavioral-differences)\n\n## Using Dart Sass\n\nThere are a few different ways to install and run Dart Sass, depending on your\nenvironment and your needs.\n\n### From Chocolatey (Windows)\n\nIf you use [the Chocolatey package manager](https://chocolatey.org/) for\nWindows, you can install Dart Sass by running\n\n```cmd\nchoco install sass -prerelease\n```\n\nThat'll give you a `sass` executable on your command line that will run Dart\nSass.\n\n### Standalone\n\nYou can download the standalone Dart Sass archive for your operating\nsystem—containing the Dart VM and the snapshot of the Sass library—from\n[the release page][releases]. Extract it, add the directory to your path, and\nthe `dart-sass` executable is ready to run!\n\n[releases]: https://github.com/sass/dart-sass/releases/\n\nTo add the directory to your path on Windows, open the Control Panel, then\nsearch for and select \"edit environment variables\". Find the variable named\n`PATH`, click Edit, add `;C:\\path\\to\\dart-sass` to the end of the value, then\nclick OK.\n\nOn more Unix-y systems, edit your shell configuration file (usually `~/.bashrc`\nor `~/.profile`) and add at the end:\n\n```sh\nexport PATH=$PATH:/path/to/dart-sass\n```\n\nRegardless of your OS, you'll need to restart your terminal in order for this\nconfiguration to take effect.\n\n### From npm\n\nDart Sass is available, compiled to JavaScript, [as an npm package][npm]. You\ncan install it globally using `npm install -g sass`, or to your project using\n`npm install sass`. This provides a `sass` executable as well as a library:\n\n[npm]: https://www.npmjs.com/package/sass\n\n```js\nvar sass = require('sass');\n\nsass.render({file: scss_filename}, function(err, result) { /* ... */ });\n\n// OR\n\nvar result = sass.renderSync({file: scss_filename});\n```\n\nThe `render()` and `renderSync()` functions will eventually support the same API\nas [node-sass's][render], but today they only supports the `file` option.\n\n[render]: https://github.com/sass/node-sass#options\n\n### From Pub\n\nIf you're a Dart user, you can install Dart Sass globally using `pub global\nactivate sass ^1.0.0-alpha`, which will provide a `dart-sass` executable. You can\nalso add it to your pubspec and use it as a library:\n\n```dart\nimport 'package:sass/sass.dart' as sass;\n\nvoid main(List<String> args) {\n  print(sass.compile(args.first));\n}\n```\n\nSee [the Dart API docs][api] for details.\n\n[api]: https://www.dartdocs.org/documentation/sass/latest/sass/sass-library.html\n\n### From Source\n\nAssuming you've already checked out this repository:\n\n1. [Install Dart](https://www.dartlang.org/install). If you download it\n   manually, make sure the SDK's `bin` directory is on your `PATH`.\n\n2. In this repository, run `pub get`. This will install Dart Sass's\n   dependencies.\n\n3. Run `dart bin/sass.dart path/to/file.scss`.\n\nThat's it!\n\n## Goals\n\nDart Sass is intended to eventually replace Ruby Sass as the canonical\nimplementation of the Sass language. It has a number of advantages:\n\n* It's fast. The Dart VM is highly optimized, and getting faster all the time\n  (for the latest performance numbers, see [`perf.md`][perf]). It's much faster\n  than Ruby, and not too far away from C.\n\n* It's portable. The Dart VM has no external dependencies and can compile\n  applications into standalone snapshot files, so a fully-functional Dart Sass\n  could be distributed as only three files (the VM, the snapshot, and a wrapper\n  script). Dart can also be compiled to JavaScript, which would make it easy to\n  distribute Sass through npm or other JS package managers.\n\n* It's friendlier to contributors. Dart is substantially easier to learn than\n  Ruby, and many Sass users in Google in particular are already familiar with\n  it. More contributors translates to faster, more consistent development.\n\n[perf]: https://github.com/sass/dart-sass/blob/master/perf.md\n\n## Behavioral Differences\n\nThere are a few intentional behavioral differences between Dart Sass and Ruby\nSass. These are generally places where Ruby Sass has an undesired behavior, and\nit's substantially easier to implement the correct behavior than it would be to\nimplement compatible behavior. These should all have tracking bugs against Ruby\nSass to update the reference behavior.\n\n1. `@extend` only accepts simple selectors, as does the second argument of\n   `selector-extend()`. See [issue 1599][].\n\n2. Subject selectors are not supported. See [issue 1126][].\n\n3. Pseudo selector arguments are parsed as `<declaration-value>`s rather than\n   having a more limited custom parsing. See [issue 2120][].\n\n4. The numeric precision is set to 10. See [issue 1122][].\n\n5. The indented syntax parser is more flexible: it doesn't require consistent\n   indentation across the whole document. See [issue 2176][].\n\n6. Colors do not support channel-by-channel arithmetic. See [issue 2144][].\n\n7. Unitless numbers aren't `==` to unit numbers with the same value. In\n   addition, map keys follow the same logic as `==`-equality. See\n   [issue 1496][].\n\n8. `rgba()` and `hsla()` alpha values with percentage units are interpreted as\n   percentages. Other units are forbidden. See [issue 1525][].\n\n9. Too many variable arguments passed to a function is an error. See\n   [issue 1408][].\n\n10. Allow `@extend` to reach outside a media query if there's an identical\n    `@extend` defined outside that query. This isn't tracked explicitly, because\n    it'll be irrelevant when [issue 1050][] is fixed.\n\n11. Some selector pseudos containing placeholder selectors will be compiled\n    where they wouldn't be in Ruby Sass. This better matches the semantics of\n    the selectors in question, and is more efficient. See [issue 2228][].\n\n12. The old-style `:property value` syntax is not supported in the indented\n    syntax. See [issue 2245][].\n\n13. The reference combinator is not supported. See [issue 303][].\n\n14. Universal selector unification is symmetrical. See [issue 2247][].\n\n15. `@extend` doesn't produce an error if it matches but fails to unify. See\n    [issue 2250][].\n\n16. Dart Sass currently only supports UTF-8 documents. We'd like to support\n    more, but Dart currently doesn't support them. See [dart-lang/sdk#11744][],\n    for example.\n\n[issue 1599]: https://github.com/sass/sass/issues/1599\n[issue 1126]: https://github.com/sass/sass/issues/1126\n[issue 2120]: https://github.com/sass/sass/issues/2120\n[issue 1122]: https://github.com/sass/sass/issues/1122\n[issue 2176]: https://github.com/sass/sass/issues/2176\n[issue 2144]: https://github.com/sass/sass/issues/2144\n[issue 1496]: https://github.com/sass/sass/issues/1496\n[issue 1525]: https://github.com/sass/sass/issues/1525\n[issue 1408]: https://github.com/sass/sass/issues/1408\n[issue 1050]: https://github.com/sass/sass/issues/1050\n[issue 2228]: https://github.com/sass/sass/issues/2228\n[issue 2245]: https://github.com/sass/sass/issues/2245\n[issue 303]: https://github.com/sass/sass/issues/303\n[issue 2247]: https://github.com/sass/sass/issues/2247\n[issue 2250]: https://github.com/sass/sass/issues/2250\n[dart-lang/sdk#11744]: https://github.com/dart-lang/sdk/issues/11744\n\nDisclaimer: this is not an official Google product.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sass/dart-sass.git"
  },
  "scripts": {},
  "version": "1.0.0-beta.2"
}
